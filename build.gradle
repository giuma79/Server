buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}
apply plugin: 'android'


android {
    compileSdkVersion
    buildToolsVersion '22.0.1'
    defaultConfig {
        applicationId "edu.cmu.ri.airboat.server"
        minSdkVersion 14
        targetSdkVersion 19

        ndk {
            moduleName "Server"
        }
    }
    productFlavors {
        x86 {
            ndk {
                abiFilter "x86"
            }
        }
        armv7 {
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']

            jni.srcDirs = []
            jniLibs.srcDir 'libs'
        }

        /*
        task buildNative(type: Exec,description: 'Compile JNI source via NDK') {
            def ndkDir = android.plugin.ndkFolder
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src').absolutePath,
                    '-j', 4,
                    'all',
                    'NDK_DEBUG=1'
        }

        task cleanNative(type: Exec, description: 'Clean JNI object files') {
            def ndkDir = android.plugin.ndkFolder
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src').absolutePath,
                    'clean'
        }

        clean.dependsOn 'cleanNative'

        tasks.withType(JavaCompile) {
            compileTask -> compileTask.dependsOn buildNative
        }
        */

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    compileSdkVersion 20
}

dependencies {
    compile files('libs/crwlib_core.jar')
    compile files('libs/jscience-4.3.jar')
    compile files('libs/microlog4android-1.0.0.jar')
    compile files('libs/madara.jar')
    compile files('libs/gams.jar')
}


//task copyNativeLibs(type: Copy) {
//    from(new File(project(':').buildDir, 'native-libs')) { include '**/*.so' }
//    into new File(buildDir, 'native-libs')
//}
/*
tasks.withType(JavaCompile) { javaCompileTask -> javaCompileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}
*/